name: Test and deploy code
on:
   push :
     branches : ["main"]
   pull_request :
      branches : ["main"]



jobs:
  build-job:
    environment:
      name: testingenv
    env:

      DBPASSWORD: ${{secrets.DBPASSWORD}}
      # 
      DBHOST: ${{secrets.DBHOST}}
      #  
      DBPORT: ${{secrets.DBPORT}}
      # 
      DBNAME: ${{secrets.DBNAME}}
      #  
      DBUSERNAME: ${{secrets.DBUSERNAME}}
      # 
      SECRETKEY: ${{secrets.SECRETKEY}}
      ACCESS_TOKEN_EXPIRES_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRES_MINUTES}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      DBURL: ${{secrets.DBURL}}
  



    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{secrets.DBUSERNAME}}
          # 
          
          POSTGRES_PASSWORD: ${{secrets.DBPASSWORD}}
          #  
           
          POSTGRES_DB: ${{secrets.DBNAME}}
          # 
          
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      # ${{secrets.DBURL}}
      # 

    steps:


        
      - name: check code being pushed
        uses: actions/checkout@v2
      - name: pulling python version 3.12
        uses: actions/setup-python@v6
        with:
          python-version: '3.12' 
      - name: upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install all dependencies
        run: pip install -r requirements.txt
      - name : Run tests on ubuntu machines
        run: pytest
      - name: Login to docker
        uses: docker/login-action@v3
        with:
          username: ${{vars.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker build and push the image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          cache-from: 
            type=local,src=temp/.buildx-cache
          cache-to: 
            type=local,dest=temp/.buildx-cache
          
          tags: ${{vars.DOCKER_USERNAME}}/fastapi:latest
  deploy-job:
    needs: build-job
    if: success()
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install vercel on maching
        run: npm install  -g vercel
      - name: Pull Vercel Environment Info
        run: vercel pull --yes --environment=production --token=9G741IgipZqgEuxlDqg5a5gC

      - name: Deploy to Vercel
        run: vercel --prod --token=9G741IgipZqgEuxlDqg5a5gC


  
